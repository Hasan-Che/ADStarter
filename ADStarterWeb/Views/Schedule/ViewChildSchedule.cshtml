@model ADStarter.Models.ViewModels.ChildScheduleViewModel
@{
    ViewData["Title"] = "Child Schedule";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-6">
                    <h3>Child Schedule</h3>
                </div>
                <div class="col-6">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a asp-controller="Dashboard" asp-action="Index">
                                <svg class="stroke-icon">
                                    <use href="~/assets/svg/icon-sprite.svg#stroke-home"></use>
                                </svg>
                            </a>
                        </li>
                        <li class="breadcrumb-item active">Child Schedule</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <div class="card">
            <div class="card-body">
                <form asp-action="ViewChildSchedule" method="post">
                    <div class="form-group">
                        <label for="childId">Select Child:</label>
                        <select class="form-control" id="childId" name="childId" asp-items="@(new SelectList(ViewBag.ActiveChildren, "c_myKid", "c_name"))">
                            <option value="">-- Select Child --</option>
                        </select>
                    </div>
                    <button type="submit" class="btn btn-primary">View Schedule</button>
                </form>

                @if (Model != null && Model.Schedules != null && Model.Schedules.Any())
                {
                    <div class="mt-4">
                        <h4>Schedule for @Model.ChildName</h4>
                        <div id="calendar"></div>
                    </div>

                    <script>
                        document.addEventListener('DOMContentLoaded', function () {
                            var calendarEl = document.getElementById('calendar');
                            var events = [];

                            @foreach (var schedule in Model.Schedules)
                            {
                                <text>
                                events.push({
                                    title: "@schedule.ProgramName - @schedule.TherapistName",
                                    start: "@schedule.SessionDate.ToString("yyyy-MM-ddTHH:mm:ss")",
                                    end: "@schedule.SessionDate.AddMinutes(60).ToString("yyyy-MM-ddTHH:mm:ss")",
                                    description: "@schedule.SlotTime"
                                });
                                </text>
                            }

                            var calendar = new FullCalendar.Calendar(calendarEl, {
                                initialView: 'dayGridMonth',
                                events: events
                            });
                            calendar.render();
                        });
                    </script>
                }
            </div>
        </div>
    </div>
</div>
