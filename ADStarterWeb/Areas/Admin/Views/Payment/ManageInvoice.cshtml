@{
    ViewData["Title"] = "Billing - Manage Invoices";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .BorderLess {
        border: none;
    }
    .delete-row-btn {
        color: red;
        cursor: pointer;
    }
    .table-dashed {
        border: 1px dashed #dee2e6;
    }
    .table-dashed th,
    .table-dashed td {
        border: 1px dashed #dee2e6;
    }
</style>
<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-6">
                    <h3>Invoices</h3>
                </div>
                <div class="col-6">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a asp-controller="Dashboard" asp-action="Index">
                                <svg class="stroke-icon">
                                    <use href="../assets/svg/icon-sprite.svg#stroke-home"></use>
                                </svg>
                            </a>
                        </li>
                        <li class="breadcrumb-item">Billing</li>
                        <li class="breadcrumb-item">Invoices</li>
                        <li class="breadcrumb-item active">Manage Invoices</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="card float-right">
            <div class="card-header">
                Invoice
                <strong id="invoiceDate"></strong>
                <span class="float-right"><strong>Status:</strong> <span id="invoiceStatus"></span></span>
            </div>
            <div class="card-body">
                <div class="row mb-4">
                    <div class="col-sm-6">
                        <div style="margin-bottom: 8px;">
                            <strong>ADventure Rehabilitation Center</strong>
                        </div>
                        <div style="margin-bottom: 8px;">MA1, Kolej Tun Dr Ismail</div>
                        <div style="margin-bottom: 8px;">Skudai, 80990 Johor Bahru, Johor</div>
                        <div style="margin-bottom: 8px;">Email: info@ADventure.com.my</div>
                        <div style="margin-bottom: 8px;">Phone: +60 123 456 789</div>
                    </div>
                    <div class="col-sm-6">
                        <div class="float-right">
                            <div style="margin-bottom: 8px;">
                                <input type="text" class="form-control input-primary BorderLess" placeholder="Parent Name">
                            </div>
                            <div style="margin-bottom: 8px;">
                                <textarea class="form-control input-primary BorderLess" placeholder="Address"></textarea>
                            </div>
                            <div style="margin-bottom: 8px;">
                                <input type="text" class="form-control input-primary BorderLess" placeholder="Phone No">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="table-responsive">
                    <table class="table table-dashed">
                        <thead>
                            <tr>
                                <th class="center">#</th>
                                <th>Program</th>
                                <th>Description</th>
                                <th>Session Type</th>
                                <th class="right">Unit Cost</th>
                                <th class="center">Quantity</th>
                                <th class="right">Fee</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td class="center">1</td>
                                <td class="left strong">
                                    <select class="form-select" name="programs">
                                        <option>--Select--</option>
                                    </select>
                                </td>
                                <td class="left">
                                    <textarea name="description" class="form-control BorderLess" readonly></textarea>
                                </td>
                                <td class="left">
                                    <select class="form-select" name="sessions">
                                        <option>--Select--</option>
                                    </select>
                                </td>
                                <td class="right">
                                    <input type="text" name="unitCost" class="form-control BorderLess" readonly>
                                </td>
                                <td class="center">
                                    <input type="number" name="quantity" class="form-control BorderLess" placeholder="Quantity" min="1">
                                </td>
                                <td class="right">
                                    <input type="text" name="total" class="form-control BorderLess" readonly>
                                </td>
                            </tr>
                            <tr>
                                <td colspan="7">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <button class="btn-outline-primary" onclick="addNewRow();">
                                                <a href="javascript:void(0);"><i class="fa fa-plus"></i></a>
                                            </button>
                                        </div>
                                        <div class="col-md-6 text-end">
                                            <button class="btn-outline-danger" onclick="deleteLastRow();">
                                                <a href="javascript:void(0);"><i class="fa fa-minus delete-row-btn"></i></a>
                                            </button>
                                        </div>
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="card-footer">
                <div class="row">
                    <div class="col-lg-8 col-sm-7"></div>
                    <div class="col-lg-4 col-sm-5 ml-auto">
                        <table class="table table-clear">
                            <tbody>
                                <tr>
                                    <td class="left"><strong>Subtotal Fee</strong></td>
                                    <td class="right"><span id="subtotal">$0.00</span></td>
                                </tr>
                                <tr>
                                    <td class="left"><strong>Tax (10%)</strong></td>
                                    <td class="right"><span id="vatAmount">$0.00</span></td>
                                </tr>
                                <tr>
                                    <td class="left"><strong>Total Fee</strong></td>
                                    <td class="right"><span id="totalFee">$0.00</span></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function() {
            // Set invoice date to today's date
            const today = new Date();
            const formattedDate = today.toISOString().split('T')[0];
            $('#invoiceDate').text(formattedDate);

            // Set default status to "Pending"
            $('#invoiceStatus').text('Pending');

            // Fetch Programs
            $.ajax({
                url: '@Url.Action("GetPrograms", "Payment")',
                type: 'GET',
                dataType: 'json',
                success: function(data) {
                    var programDropdown = $('select[name="programs"]');
                    programDropdown.empty();
                    programDropdown.append('<option value="">--Select--</option>');
                    $.each(data, function(index, program) {
                        programDropdown.append('<option value="' + program.prog_ID + '" data-desc="' + program.prog_desc + '">' + program.prog_name + '</option>');
                    });
                },
                error: function(xhr, status, error) {
                    console.error("Error fetching programs: " + error);
                }
            });

            // Fetch Session Prices on Program Change
            $('body').on('change', 'select[name="programs"]', function() {
                var row = $(this).closest('tr');
                var programId = $(this).val();
                var programDesc = $(this).find(':selected').data('desc');
                row.find('textarea[name="description"]').val(programDesc);

                if (programId) {
                    $.ajax({
                        url: '@Url.Action("GetSessionPrices", "Payment")',
                        type: 'GET',
                        dataType: 'json',
                        data: { programId: programId },
                        success: function(data) {
                            var sessionDropdown = row.find('select[name="sessions"]');
                            sessionDropdown.empty();
                            sessionDropdown.append('<option value="">--Select--</option>');
                            $.each(data, function(index, session) {
                                var sessionName = session.session_name + ' (' + session.session_day + ')';
                                sessionDropdown.append('<option value="' + session.sp_price + '" data-quantity="' + session.session_bilangan + '">' + sessionName + '</option>');
                            });
                            clearRightColumns(row);
                        },
                        error: function(xhr, status, error) {
                            console.error("Error fetching session prices: " + error);
                        }
                    });
                } else {
                    clearRightColumns(row);
                    row.find('textarea[name="description"]').val('');
                }
            });

            // Update Unit Cost and Quantity Constraints on Session Change
            $('body').on('change', 'select[name="sessions"]', function() {
                var row = $(this).closest('tr');
                var unitCost = $(this).val();
                var maxQuantity = $(this).find(':selected').data('quantity');
                row.find('input[name="unitCost"]').val(unitCost);
                row.find('input[name="quantity"]').attr('max', maxQuantity).val(1).trigger('input');
            });

            // Update Total on Quantity Change
            $('body').on('input change', 'input[name="quantity"]', function() {
                var row = $(this).closest('tr');
                var unitCost = parseFloat(row.find('input[name="unitCost"]').val());
                var quantity = parseInt($(this).val());
                var maxQuantity = parseInt($(this).attr('max'));

                if (quantity < 1) {
                    quantity = 1;
                    $(this).val(1);
                } else if (quantity > maxQuantity) {
                    quantity = maxQuantity;
                    $(this).val(maxQuantity);
                }

                var total = unitCost * quantity;
                row.find('input[name="total"]').val(total.toFixed(2));
                recalculateTotals();
            });

            // Helper function to clear columns to the right
            function clearRightColumns(row) {
                row.find('input[name="unitCost"]').val('');
                row.find('input[name="quantity"]').val('').attr('max', '');
                row.find('input[name="total"]').val('');
            }

            // Recalculate Total on quantity change
            function recalculateTotals() {
                let subtotal = 0;
                $('input[name="total"]').each(function() {
                    subtotal += parseFloat($(this).val()) || 0;
                });

                const vatAmount = subtotal * 0.10;
                const totalFee = subtotal + vatAmount;

                $('#subtotal').text(`$${subtotal.toFixed(2)}`);
                $('#vatAmount').text(`$${vatAmount.toFixed(2)}`);
                $('#totalFee').text(`$${totalFee.toFixed(2)}`);
            }

            // Initial call to set the totals
            recalculateTotals();
        });

        // Function to add a new row
        function addNewRow() {
            // Clone the first row of the table
            var newRow = $('.table-dashed tbody tr:first').clone();

            // Clear the input fields in the new row
            newRow.find('select[name="programs"]').val('');
            newRow.find('textarea[name="description"]').val('');
            newRow.find('select[name="sessions"]').val('');
            newRow.find('input[name="unitCost"]').val('');
            newRow.find('input[name="quantity"]').val('');
            newRow.find('input[name="total"]').val('');

            // Update the row index
            var newIndex = $('.table-dashed tbody tr').length;
            newRow.find('.center').first().text(newIndex);

            // Insert the new row before the plus button row
            $('.table-dashed tbody tr:last').before(newRow);
        }

        // Function to delete the last row
        function deleteLastRow() {
            var rowCount = $('.table-dashed tbody tr').length;
            if (rowCount > 2) { // Ensure at least one row remains
                $('.table-dashed tbody tr').eq(rowCount - 2).remove();
                updateRowIndexes();
                recalculateTotals();
            }
        }

        // Function to update the row indexes
        function updateRowIndexes() {
            $('.table-dashed tbody tr').each(function(index) {
                if (index > 0) {
                    $(this).find('.center').first().text(index);
                }
            });
        }
    </script>
}



