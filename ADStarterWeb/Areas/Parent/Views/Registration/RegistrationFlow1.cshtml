@model ADStarter.Models.ParentChildViewModel

@{
    ViewData["Title"] = "User Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <!-- Font Awesome CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        .f1-steps {
            display: flex;
            justify-content: space-between;
            position: relative;
            margin-bottom: 30px;
        }

        .f1-step {
            flex: 1;
            text-align: center;
            position: relative;
        }

            .f1-step .f1-step-icon {
                width: 40px;
                height: 40px;
                line-height: 40px;
                border-radius: 50%;
                background: #eee;
                margin: 0 auto;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 20px;
                position: relative;
                z-index: 2;
            }

            .f1-step.active .f1-step-icon {
                background: #007bff;
                color: #fff;
            }

            .f1-step p {
                margin-top: 10px;
                font-size: 14px;
            }

        .f1-progress {
            position: absolute;
            top: 50%;
            left: 0;
            width: 100%;
            height: 4px;
            background: #ccc;
            z-index: 1;
            transform: translateY(-50%);
        }

        .f1-progress-line {
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            background: #007bff;
            width: 0;
            transition: width 0.3s;
        }
    </style>
</head>
<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-6">
                    <h3>Edit Profile</h3>
                </div>
                <div class="col-6">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a asp-controller="Dashboard" asp-action="Index">
                                <svg class="stroke-icon">
                                    <use href="~/assets/svg/icon-sprite.svg#stroke-home"></use>
                                </svg>
                            </a>
                        </li>
                        <li class="breadcrumb-item">Users</li>
                        <li class="breadcrumb-item active">Edit Profile</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header">
                        <h5>Edit Profile</h5>
                    </div>
                    <div class="card-body">
                        <form id="wizard-form" class="f1" method="post" enctype="multipart/form-data">
                            <div class="f1-steps">
                                <div class="f1-progress">
                                    <div class="f1-progress-line" data-now-value="22" data-number-of-steps="4" style="--number-of-steps: 4;"></div>
                                </div>
                                <div class="f1-step active" data-step="1">
                                    <div class="f1-step-icon"><i class="fas fa-male"></i></div>
                                    <p>Father Registration</p>
                                </div>
                                <div class="f1-step" data-step="2">
                                    <div class="f1-step-icon"><i class="fas fa-female"></i></div>
                                    <p>Mother Registration</p>
                                </div>
                                <div class="f1-step" data-step="3">
                                    <div class="f1-step-icon"><i class="fas fa-child"></i></div>
                                    <p>Child Registration</p>
                                </div>
                                <div class="f1-step" data-step="4">
                                    <div class="f1-step-icon"><i class="fa fa-stethoscope"></i></div>
                                    <p>Treatment History Details</p>
                                </div>
                            </div>

                            <fieldset class="step-form" data-step="1">
                                @Html.Partial("FatherForm", Model.Parent)
                                <div class="f1-buttons">
                                    <button class="btn btn-primary btn-next" type="button">Next</button>
                                </div>
                            </fieldset>

                            <fieldset class="step-form" data-step="2" style="display:none;">
                                @Html.Partial("MotherForm", Model.Parent)
                                <div class="f1-buttons">
                                    <button class="btn btn-secondary btn-previous" type="button">Previous</button>
                                    <button class="btn btn-primary btn-next" type="button">Next</button>
                                </div>
                            </fieldset>

                            <fieldset class="step-form" data-step="3" style="display:none;">
                                @Html.Partial("ChildForm", Model.Child)
                                <div class="f1-buttons">
                                    <button class="btn btn-secondary btn-previous" type="button">Previous</button>
                                    <button class="btn btn-primary btn-next" type="button">Next</button>
                                </div>
                            </fieldset>

                            <fieldset class="step-form" data-step="4" style="display:none;">
                                @Html.Partial("TreatmentHistoryForm", Model.TreatmentHistory)
                                <div class="f1-buttons">
                                    <button class="btn btn-secondary btn-previous" type="button">Previous</button>
                                    <button class="btn btn-primary btn-submit" type="submit">Submit</button>
                                </div>
                            </fieldset>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const totalSteps = document.querySelectorAll('.f1-step').length;
            let currentStep = 1; // Initialize current step

            showStep(currentStep);

            // Event listener for next button
            document.querySelectorAll('.btn-next').forEach(button => {
                button.addEventListener('click', function () {
                    if (currentStep < totalSteps) {
                        currentStep++;
                        showStep(currentStep);
                    }
                });
            });

            // Event listener for previous button
            document.querySelectorAll('.btn-previous').forEach(button => {
                button.addEventListener('click', function () {
                    if (currentStep > 1) {
                        currentStep--;
                        showStep(currentStep);
                    }
                });
            });
        });

        function showStep(step) {
            document.querySelectorAll('.step-form').forEach(function (el) {
                el.style.display = 'none';
            });
            document.querySelector('.step-form[data-step="' + step + '"]').style.display = 'block';
            updateStepIcons(step);
            updateProgressBar(step);
        }

        function updateStepIcons(step) {
            document.querySelectorAll('.f1-step').forEach(function (el) {
                el.classList.remove('active');
            });

            // Highlight the current step
            document.querySelector('.f1-step[data-step="' + step + '"]').classList.add('active');

            // Highlight all previous steps up to the current step
            for (let i = 1; i < step; i++) {
                document.querySelector('.f1-step[data-step="' + i + '"]').classList.add('active');
            }
        }

        function updateProgressBar(step) {
            const totalSteps = document.querySelectorAll('.f1-step').length;
            const progressBar = document.querySelector('.f1-progress-line');

            if (step === 1) {
                progressBar.style.width = '13%'; // Start from 0%
            } else if (step === 2) {
                progressBar.style.width = '35%'; // 1/3 of the progress
            } else if (step === 3) {
                progressBar.style.width = '65%'; // 2/3 of the progress
            } else if (step === 4) {
                progressBar.style.width = '100%'; // Completed
            } else {
                progressBar.style.width = '0%'; // Default to 0% if step is out of range
            }
        }
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const nationalitySelect = document.getElementById('nationalitySelect');
            const otherNationalityField = document.getElementById('otherNationalityField');
            const otherNationalitySelect = document.getElementById('otherNationalitySelect');
            const dobInput = document.getElementById('dobInput');
            const ageInput = document.getElementById('c_age'); // Ensure this matches the id in the ChildForm

            nationalitySelect.addEventListener('change', function () {
                if (this.value === 'Other') {
                    otherNationalityField.classList.remove('d-none');
                    fetchCountries();
                } else {
                    otherNationalityField.classList.add('d-none');
                }
            });

            function fetchCountries() {
                fetch('/assets/json/countries/countries.json')
                    .then(response => response.json())
                    .then(countries => {
                        populateCountries(countries);
                    })
                    .catch(error => console.error('Error fetching countries:', error));
            }

            function populateCountries(countries) {
                otherNationalitySelect.innerHTML = '<option value="">Select Country</option>';
                countries.forEach(country => {
                    const option = document.createElement('option');
                    option.value = country;
                    option.textContent = country;
                    otherNationalitySelect.appendChild(option);
                });
            }

            dobInput.addEventListener('change', function () {
                var dob = new Date(dobInput.value);
                var today = new Date();
                var age = today.getFullYear() - dob.getFullYear();
                var m = today.getMonth() - dob.getMonth();
                if (m < 0 || (m === 0 && today.getDate() < dob.getDate())) {
                    age--;
                }
                ageInput.value = age;
            });

            var myKidInput = document.querySelector("input[name='c_myKid']");

            myKidInput.addEventListener("input", function () {
                var validityMessage = '';

                if (!/^\d{12}$/.test(this.value)) {
                    validityMessage = 'Invalid MyKid number. Must be exactly 12 digits and numeric.';
                }

                this.setCustomValidity(validityMessage);
            });
        });
    </script>
}

