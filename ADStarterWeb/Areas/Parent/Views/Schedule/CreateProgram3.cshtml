@* @model ADStarter.Models.ViewModels.Schedule2ViewModel
@{
    ViewData["Title"] = "Create Program 3";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-6">
                    <h3>Intervention with Consistency</h3>
                </div>
                <div class="col-6">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a asp-controller="Dashboard" asp-action="Index">
                                <svg class="stroke-icon">
                                    <use href="../assets/svg/icon-sprite.svg#stroke-home"></use>
                                </svg>
                            </a>
                        </li>
                        <li class="breadcrumb-item">Program Controls</li>
                        <li class="breadcrumb-item active">Create Program 3</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid starts-->
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header">
                        <h5>Program Registration Form</h5>
                        <span>Fill out the form below to enroll in a new program.</span>
                    </div>
                    <div class="card-body">
                        <form id="programForm" class="needs-validation" novalidate method="post" asp-action="CreateProgram3">
                            <div class="row g-3">
                                <div class="col-md-6">
                                    <label class="form-label" for="Child_ID">Child</label>
                                    <select class="form-select" asp-for="Child_ID" required>
                                        <option selected disabled value="">Choose...</option>
                                        @foreach (var child in ViewBag.ActiveChildren)
                                        {
                                            <option value="@child.c_myKid">@child.c_name</option>
                                        }
                                    </select>
                                    <div class="invalid-feedback">Please select a child.</div>
                                </div>
                            </div>
                            <div class="row g-3 mt-3">
                                <div class="col-md-6">
                                    <label class="form-label" for="NumberOfSessions">Number of Sessions</label>
                                    <select class="form-select" asp-for="NumberOfSessions" id="NumberOfSessions" required>
                                        <option selected disabled value="">Choose...</option>
                                        <option value="4">4 Sessions</option>
                                        <option value="8">8 Sessions</option>
                                        <option value="12">12 Sessions</option>
                                        <option value="20">20 Sessions</option>
                                    </select>
                                    <div class="invalid-feedback">Please select the number of sessions.</div>
                                </div>
                            </div>
                            <div id="sessionPickers">
                                <!-- Session pickers will be generated here by JavaScript -->
                            </div>
                            <div class="row g-3 mt-3">
                                <div class="col-md-6">
                                    <button class="btn btn-primary" type="submit">Submit form</button>
                                    <button type="button" class="btn btn-secondary ms-2" onclick="clearForm()">Clear form</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid Ends-->
</div>

@section Scripts {
    <script>
        function clearForm() {
            document.getElementById('programForm').reset();
            document.querySelectorAll('.form-control').forEach(function (element) {
                element.classList.remove('is-valid');
                element.classList.remove('is-invalid');
            });
            document.getElementById('sessionPickers').innerHTML = ''; // Clear dynamically generated session pickers
        }

        document.addEventListener("DOMContentLoaded", function () {
            const sessionPickerContainer = document.getElementById("sessionPickers");
            const numberOfSessionsSelect = document.getElementById("NumberOfSessions");

            numberOfSessionsSelect.addEventListener("change", function () {
                const numberOfSessions = parseInt(this.value, 10);
                sessionPickerContainer.innerHTML = ""; // Clear previous session pickers

                for (let i = 0; i < numberOfSessions; i++) {
                    const sessionPicker = document.createElement("div");
                    sessionPicker.classList.add("row", "g-3", "mt-3");

                    const dateCol = document.createElement("div");
                    dateCol.classList.add("col-md-3");

                    const dateLabel = document.createElement("label");
                    dateLabel.classList.add("form-label");
                    dateLabel.setAttribute("for", `SessionDates[${i}]`);
                    dateLabel.textContent = "Select Date";
                    dateCol.appendChild(dateLabel);

                    const dateInput = document.createElement("input");
                    dateInput.classList.add("form-control");
                    dateInput.setAttribute("type", "date");
                    dateInput.setAttribute("name", `SessionDates[${i}]`);
                    dateInput.required = true;
                    dateInput.addEventListener('change', function () {
                        updateMinDates(i + 1);
                    });
                    dateCol.appendChild(dateInput);

                    const dateFeedback = document.createElement("div");
                    dateFeedback.classList.add("invalid-feedback");
                    dateFeedback.textContent = "Please select a date.";
                    dateCol.appendChild(dateFeedback);

                    sessionPicker.appendChild(dateCol);

                    const slotCol = document.createElement("div");
                    slotCol.classList.add("col-md-3");

                    const slotLabel = document.createElement("label");
                    slotLabel.classList.add("form-label");
                    slotLabel.setAttribute("for", `Slot_IDs[${i}]`);
                    slotLabel.textContent = "Slot";
                    slotCol.appendChild(slotLabel);

                    const slotSelect = document.createElement("select");
                    slotSelect.classList.add("form-select");
                    slotSelect.setAttribute("name", `Slot_IDs[${i}]`);
                    slotSelect.required = true;

                    const slotOptions = [
                        { value: "", text: "Choose..." },
                        { value: "1", text: "9.00 am - 10.00 am" },
                        { value: "2", text: "10.00 am - 11.00 am" },
                        { value: "3", text: "11.00 am - 12.00 pm" },
                        { value: "4", text: "2.00 pm - 3.00 pm" },
                        { value: "5", text: "3.00 pm - 4.00 pm" },
                        { value: "6", text: "4.00 pm - 5.00 pm" }
                    ];

                    slotOptions.forEach(optionData => {
                        const option = document.createElement("option");
                        option.value = optionData.value;
                        option.textContent = optionData.text;
                        slotSelect.appendChild(option);
                    });

                    slotCol.appendChild(slotSelect);

                    const slotFeedback = document.createElement("div");
                    slotFeedback.classList.add("invalid-feedback");
                    slotFeedback.textContent = "Please select a slot.";
                    slotCol.appendChild(slotFeedback);

                    sessionPicker.appendChild(slotCol);

                    sessionPickerContainer.appendChild(sessionPicker);
                }

                setInitialMinDates();
            });

            function setInitialMinDates() {
                const dateInputs = sessionPickerContainer.querySelectorAll('input[type="date"]');
                const today = new Date();
                today.setDate(today.getDate() + 1);
                const yyyy = today.getFullYear();
                const mm = String(today.getMonth() + 1).padStart(2, '0');
                const dd = String(today.getDate()).padStart(2, '0');
                const minDate = `${yyyy}-${mm}-${dd}`;

                dateInputs.forEach((input, index) => {
                    input.setAttribute('min', minDate);
                });
            }

            function updateMinDates(index) {
                const dateInputs = sessionPickerContainer.querySelectorAll('input[type="date"]');
                if (index < dateInputs.length) {
                    const selectedDate = new Date(dateInputs[index - 1].value);
                    selectedDate.setDate(selectedDate.getDate() + 1);
                    const yyyy = selectedDate.getFullYear();
                    const mm = String(selectedDate.getMonth() + 1).padStart(2, '0');
                    const dd = String(selectedDate.getDate()).padStart(2, '0');
                    const nextMinDate = `${yyyy}-${mm}-${dd}`;
                    dateInputs[index].setAttribute('min', nextMinDate);
                }
            }

            const form = document.getElementById('programForm');

            form.addEventListener('submit', function (event) {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                    alert('Please fill in all required fields.');
                }

                form.classList.add('was-validated');
            }, false);
        });
    </script>
}
 *@