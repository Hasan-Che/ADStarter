@* @model ADStarter.Models.ViewModels.Schedule2ViewModel
@{
    ViewData["Title"] = "Create Program 5";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-6">
                    <h3>Back-to-school 4</h3>
                </div>
                <div class="col-6">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a asp-controller="Dashboard" asp-action="Index">
                                <svg class="stroke-icon">
                                    <use href="../assets/svg/icon-sprite.svg#stroke-home"></use>
                                </svg>
                            </a>
                        </li>
                        <li class="breadcrumb-item">Program Controls</li>
                        <li class="breadcrumb-item active">Create Program 5</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid starts-->
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header">
                        <h5>Program Registration Form</h5>
                        <span>Fill out the form below to enroll in a new program.</span>
                    </div>
                    <div class="card-body">
                        <form id="programForm" class="needs-validation" novalidate method="post" asp-action="CreateProgram5">
                            <div class="row g-3">
                                <div class="col-md-6">
                                    <label class="form-label" for="Child_ID">Child</label>
                                    <select class="form-select" asp-for="Child_ID" required>
                                        <option selected disabled value="">Choose...</option>
                                        @foreach (var child in ViewBag.ActiveChildren)
                                        {
                                            <option value="@child.c_myKid">@child.c_name</option>
                                        }
                                    </select>
                                    <div class="invalid-feedback">Please select a child.</div>
                                </div>
                            </div>

                            @for (int i = 0; i < 4; i++)
                            {
                                <div class="row g-3 mt-3">
                                    <div class="col-md-3">
                                        <label class="form-label" for="SessionDates[@i]">Select Date</label>
                                        <input type="date" class="form-control session-date-picker" id="SessionDates[@i]" name="SessionDates[@i]" required>
                                        <div class="invalid-feedback">Please select a date.</div>
                                    </div>
                                    <div class="col-md-3">
                                        <label class="form-label" for="Slot_IDs[@i]">Slot</label>
                                        <select class="form-select" id="Slot_IDs[@i]" name="Slot_IDs[@i]" required>
                                            <option selected disabled value="">Choose...</option>
                                            <option value="7">Morning: 9.00 am - 11.30 am</option>
                                            <option value="8">Evening: 2.00 pm - 4.30 pm</option>
                                        </select>
                                        <div class="invalid-feedback">Please select a slot.</div>
                                    </div>
                                </div>
                            }

                            <div class="row mt-3">
                                <div class="col-md-6">
                                    <button class="btn btn-primary" type="submit">Submit form</button>
                                    <button class="btn btn-secondary ms-2" type="button" id="clearFormBtn">Clear form</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid Ends-->
</div>
@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const today = new Date().toISOString().split('T')[0];
            const datePickers = document.querySelectorAll('.session-date-picker');
            const selectedDates = new Set();

            datePickers.forEach(datePicker => {
                datePicker.setAttribute('min', today);

                datePicker.addEventListener('change', function () {
                    const selectedDate = this.value;

                    if (selectedDates.has(selectedDate)) {
                        alert('This date has already been selected. Please choose a different date.');
                        this.value = '';
                        return;
                    }

                    const selectedDay = new Date(selectedDate).getDay();
                    const selectedWeek = new Date(selectedDate).getWeek();

                    let conflict = false;
                    selectedDates.forEach(date => {
                        const day = new Date(date).getDay();
                        const week = new Date(date).getWeek();
                        if (selectedWeek === week && selectedDay === day) {
                            conflict = true;
                        }
                    });

                    if (conflict) {
                        alert('You can only choose one date per week. Please select a different date.');
                        this.value = '';
                    } else {
                        selectedDates.add(selectedDate);
                    }
                });
            });

            document.getElementById('clearFormBtn').addEventListener('click', function () {
                const form = document.getElementById('programForm');
                form.reset();
                selectedDates.clear();
                form.classList.remove('was-validated');
                datePickers.forEach(datePicker => {
                    datePicker.value = '';
                });
            });

            // Bootstrap validation setup
            const forms = document.querySelectorAll('.needs-validation');
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault();
                            event.stopPropagation();
                            alert('Please fill in all required fields.');
                        }

                        form.classList.add('was-validated');
                    }, false);
                });
        });

        Date.prototype.getWeek = function () {
            const jan1 = new Date(this.getFullYear(), 0, 1);
            return Math.ceil((((this - jan1) / 86400000) + jan1.getDay() + 1) / 7);
        };
    </script>
}
 *@